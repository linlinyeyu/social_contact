<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zheng.timeline.dao.mapper.UcenterTimelineMapper">
  <resultMap id="BaseResultMap" type="com.zheng.timeline.dao.model.UcenterTimeline">
    <id column="timeline_id" jdbcType="INTEGER" property="timelineId" />
    <result column="user_uuid" jdbcType="VARCHAR" property="userUuid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="media_type" jdbcType="SMALLINT" property="mediaType" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="is_reported" jdbcType="BIT" property="isReported" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="relation_types" jdbcType="VARCHAR" property="relationTypes" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zheng.timeline.dao.model.UcenterTimeline">
    <result column="text" jdbcType="LONGVARCHAR" property="text" />
    <result column="body" jdbcType="LONGVARCHAR" property="body" />
  </resultMap>
  <sql id="Base_Column_List">
    timeline_id, user_uuid, username, avatar, media_type, create_time, is_deleted, is_reported, 
    update_time, relation_types
  </sql>
  <sql id="Blob_Column_List">
    text, body
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ucenter_timeline
    where timeline_id = #{timelineId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ucenter_timeline
    where timeline_id = #{timelineId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zheng.timeline.dao.model.UcenterTimeline">
    <selectKey keyProperty="timelineId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ucenter_timeline (user_uuid, username, avatar, 
      media_type, create_time, is_deleted, 
      is_reported, update_time, relation_types, 
      text, body)
    values (#{userUuid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{mediaType,jdbcType=SMALLINT}, #{createTime,jdbcType=BIGINT}, #{isDeleted,jdbcType=BIT}, 
      #{isReported,jdbcType=BIT}, #{updateTime,jdbcType=BIGINT}, #{relationTypes,jdbcType=VARCHAR}, 
      #{text,jdbcType=LONGVARCHAR}, #{body,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zheng.timeline.dao.model.UcenterTimeline">
    <selectKey keyProperty="timelineId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ucenter_timeline
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userUuid != null">
        user_uuid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="mediaType != null">
        media_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="isReported != null">
        is_reported,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="relationTypes != null">
        relation_types,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="body != null">
        body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userUuid != null">
        #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="mediaType != null">
        #{mediaType,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="isReported != null">
        #{isReported,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="relationTypes != null">
        #{relationTypes,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=LONGVARCHAR},
      </if>
      <if test="body != null">
        #{body,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zheng.timeline.dao.model.UcenterTimeline">
    update ucenter_timeline
    <set>
      <if test="userUuid != null">
        user_uuid = #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="mediaType != null">
        media_type = #{mediaType,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="isReported != null">
        is_reported = #{isReported,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="relationTypes != null">
        relation_types = #{relationTypes,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where timeline_id = #{timelineId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zheng.timeline.dao.model.UcenterTimeline">
    update ucenter_timeline
    set user_uuid = #{userUuid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      media_type = #{mediaType,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=BIGINT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      is_reported = #{isReported,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=BIGINT},
      relation_types = #{relationTypes,jdbcType=VARCHAR},
      text = #{text,jdbcType=LONGVARCHAR},
      body = #{body,jdbcType=LONGVARCHAR}
    where timeline_id = #{timelineId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zheng.timeline.dao.model.UcenterTimeline">
    update ucenter_timeline
    set user_uuid = #{userUuid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      media_type = #{mediaType,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=BIGINT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      is_reported = #{isReported,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=BIGINT},
      relation_types = #{relationTypes,jdbcType=VARCHAR}
    where timeline_id = #{timelineId,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />


  <select id="selectById" parameterType="int" resultType="map">
    select * from ucenter_timeline where timeline_id = #{timelineId}
  </select>

  <select id="selectFriendsTimelineList" resultType="com.zheng.timeline.model.UcenterTimelineVO">
    select ut.*, uut.relation_type,uut.read_time
    from ucenter_user_timeline uut
    inner join ucenter_timeline ut on ut.timeline_id = uut.timeline_id
    <where>
      uut.user_uuid = #{uuid}
      <if test="relationType > 0">
        and (uut.relation_type = #{relationType} or uut.relation_type = 0)
      </if>
      <if test="date > 0">
        and uut.create_time &lt; #{date}
      </if>
    </where>
    order by uut.publish_time desc
  </select>
</mapper>