<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zheng.user.dao.mapper.UcenterUserOauthMapper">
  <resultMap id="BaseResultMap" type="com.zheng.user.dao.model.UcenterUserOauth">
    <id column="user_oauth_id" jdbcType="INTEGER" property="userOauthId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="oauth_id" jdbcType="INTEGER" property="oauthId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zheng.user.dao.model.UcenterUserOauth">
    <result column="open_id" jdbcType="VARBINARY" property="openId" />
  </resultMap>
  <sql id="Base_Column_List">
    user_oauth_id, user_id, oauth_id, status, create_time
  </sql>
  <sql id="Blob_Column_List">
    open_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ucenter_user_oauth
    where user_oauth_id = #{userOauthId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ucenter_user_oauth
    where user_oauth_id = #{userOauthId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zheng.user.dao.model.UcenterUserOauth">
    insert into ucenter_user_oauth (user_oauth_id, user_id, oauth_id, 
      status, create_time, open_id
      )
    values (#{userOauthId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{oauthId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{openId,jdbcType=VARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zheng.user.dao.model.UcenterUserOauth">
    insert into ucenter_user_oauth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userOauthId != null">
        user_oauth_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="oauthId != null">
        oauth_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="openId != null">
        open_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userOauthId != null">
        #{userOauthId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="oauthId != null">
        #{oauthId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zheng.user.dao.model.UcenterUserOauth">
    update ucenter_user_oauth
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="oauthId != null">
        oauth_id = #{oauthId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARBINARY},
      </if>
    </set>
    where user_oauth_id = #{userOauthId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zheng.user.dao.model.UcenterUserOauth">
    update ucenter_user_oauth
    set user_id = #{userId,jdbcType=INTEGER},
      oauth_id = #{oauthId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      open_id = #{openId,jdbcType=VARBINARY}
    where user_oauth_id = #{userOauthId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zheng.user.dao.model.UcenterUserOauth">
    update ucenter_user_oauth
    set user_id = #{userId,jdbcType=INTEGER},
      oauth_id = #{oauthId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_oauth_id = #{userOauthId,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>